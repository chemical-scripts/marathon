#!/bin/bash
VERSION=0.1.0

# Usage:
#   marathon program inputfile [inputfile...]
#   marathon -h
#   marathon -v

function version_page {
  echo "$(basename "$0")" "$VERSION"
}

function help_page {
  version_page
  sed -ne '/#[^!]\(.*\)/{
    /\/#/d
    s/    //
    s/# //p
  }' "$0"
}

nprocs=1

# Options:
while getopts ":hvn:" opt "$@"; do
  case $opt in
    h)
      # -h show this help message
      help_page
      exit 0
      ;;
    v)
      # -v show version
      version_page
      exit 0
      ;;
    n)
      # -n number of processors
      nprocs=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

program=$1
shift $((OPTIND))

# Examples:

function exec_adf {
  : "${ADFBIN:?"ADFBIN must point to your ADF installation."}"

  inputfile=$1
  inputfile_basename=$(basename "$inputfile" ".in")

  #  $ marathon adf *f1.in *f2.in *eda.in
  "$ADFBIN/adf" -n "$nprocs" < "${inputfile_basename}.in" | \
  tee "${inputfile_basename}.out"

  mv TAPE21 "${inputfile_basename}.t21"
}

function exec_nwchem {
  : "${NWCHEMBIN:?"NWCHEMBIN must point to your NWCHEM installation."}"

  inputfile=$1
  inputfile_basename=$(basename "$inputfile" ".nw")

  #  $ marathon nwchem *.nw
  mpirun -np "$nprocs" $NWCHEMBIN "${inputfile_basename}.nw" | \
    tee "${inputfile_basename}.out"
}

function exec_orca {
  : "${ORCABIN:?"ORCABIN must point to your ORCA installation."}"

  inputfile=$1
  inputfile_basename=$(basename "$inputfile" ".inp")

  #  $ marathon orca {methane,ethane,n-propane}.inp
  $ORCABIN "${inputfile_basename}.inp" | \
    tee "${inputfile_basename}.out"
}

for inputfile in "$@"; do
  if [ -r "$inputfile" ]; then
    case $program in
      adf)
        exec_adf "$inputfile"
        ;;
      nwchem)
        exec_nwchem "$inputfile"
        ;;
      orca)
        exec_orca "$inputfile"
        ;;
    esac
  else
    echo "  $inputfile does not exist or is not readable."
    exit 1
  fi
done

# Licensed under the MIT License (MIT)
